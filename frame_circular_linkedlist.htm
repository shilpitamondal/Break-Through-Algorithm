<!DOCTYPE html>
<html>
    <head>
         <link rel="stylesheet" href="style.css">
    </head>
    <body class="framebody">
        <h1>Circular Linked List</h1>
        <pre>
Circular linked list is a linked list where all nodes are connected to form 
a circle. There is no NULL at the end. A circular linked list can be a singly 
circular linked list or doubly circular linked list.

<h3>Node is represented as:</h3>
struct Node
{
    int data;
    struct Node *next;
};

Advantages of Circular Linked Lists:
Any node can be a starting point. We can traverse the whole list by starting
from any point. We just need to stop when the first visited node is visited again.

        </pre>
        <img src="images/circular-linked-list.png" width=70%>
        <pre>
            <h3>Corresponding code:</h3>

// C program to implement
// the above approach
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
 
/* structure for a node */
struct Node
{
    int data;
    struct Node *next;
};
 
/* Function to insert a node at the beginning of a Circular
   linked list */
void push(struct Node **head_ref, int data)
{
    struct Node *ptr1 = (struct Node *)malloc(sizeof(struct Node));
    struct Node *temp = *head_ref;
    ptr1->data = data;
    ptr1->next = *head_ref;
 
    /* If linked list is not NULL then set the next of last node */
    if (*head_ref != NULL)
    {
        while (temp->next != *head_ref)
            temp = temp->next;
        temp->next = ptr1;
    }
    else
        ptr1->next = ptr1; /*For the first node */
 
    *head_ref = ptr1;
}
 
/* Function to print nodes in a given Circular linked list */
void printList(struct Node *head)
{
    struct Node *temp = head;
    if (head != NULL)
    {
        do
        {
            printf("%d ", temp->data);
            temp = temp->next;
        }
        while (temp != head);
    }
}
 
/* Driver program to test above functions */
int main()
{
    /* Initialize lists as empty */
    struct Node *head = NULL;
 
    /* Created linked list will be 11->2->56->12 */
    push(&head, 12);
    push(&head, 56);
    push(&head, 2);
    push(&head, 11);
 
    printf("Contents of Circular Linked List\n ");
    printList(head);
 
    return 0;
}

<b>Output:</b>
Contents of Circular Linked List
11 2 56 12
            
       </pre>
    </body>

</html>